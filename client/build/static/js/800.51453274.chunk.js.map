{"version":3,"file":"static/js/800.51453274.chunk.js","mappings":"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","sources":["components/Song/SongUpdateDelete.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useParams, useNavigate, Navigate } from \"react-router-dom\";\r\nimport { FaRegEdit, FaTrash } from \"react-icons/fa\";\r\nimport { FaPlay } from \"react-icons/fa\";\r\nimport {apiUrl} from \"../../services/api\";\r\nimport Loading from \"../../layouts/Loading\";\r\nimport { FaArrowLeft } from \"react-icons/fa\";\r\nimport axios from \"axios\";\r\n\r\nexport default function SongUpdate() {\r\n  const { id } = useParams();\r\n  const navigate = useNavigate();\r\n\r\n  const [songDetails, setSongDetails] = useState({\r\n    title: \"\",\r\n    song_cover: null,\r\n    artist_id: \"\",\r\n    audio: null,\r\n    duration: \"\",\r\n    genre: \"Pop\",\r\n  });\r\n  const [artists, setArtists] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [song, setSong] = useState([])\r\n  const [error, setError] = useState(null);\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n\r\n  // Fetch artists and song details on component mount\r\n  useEffect(() => {\r\n    const fetchArtists = async () => {\r\n      const token = sessionStorage.getItem('token')\r\n      if (!token) {\r\n        Navigate('/login')\r\n        return;\r\n      }\r\n      try {\r\n        const response = await axios.get(apiUrl+\"/artists\", {\r\n          headers: { Authorization: `Token ${token}` },\r\n        });\r\n        setArtists(response.data);\r\n      } catch (error) {\r\n        setError(\"Failed to load artists\");\r\n      }\r\n    };\r\n\r\n    const fetchSongDetails = async () => {\r\n      const token = sessionStorage.getItem('token')\r\n      if (!token) {\r\n        Navigate('/login')\r\n        return;\r\n      }\r\n      try {\r\n        const response = await axios.get(`${apiUrl}/songs/${id}/`, {\r\n          headers: {\r\n            Authorization: `Token ${token}`\r\n          },\r\n        });\r\n        setSong(response.data);\r\n        setSongDetails({\r\n          title: response.data.title,\r\n          song_cover: response.data.song_cover,\r\n          artist_id: response.data.artist_id,\r\n          audio: response.data.audio,\r\n          duration: response.data.duration,\r\n          genre: response.data.genre,\r\n        });\r\n      } catch (error) {\r\n        setError(\"Failed to load song\", error.message);\r\n      }\r\n    };\r\n\r\n    fetchArtists();\r\n    fetchSongDetails();\r\n  }, [id]);\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value, type, files } = e.target;\r\n    if (type === \"file\") {\r\n      setSongDetails((prevDetails) => ({\r\n        ...prevDetails,\r\n        [name]: files[0],\r\n      }));\r\n    } else {\r\n      setSongDetails((prevDetails) => ({\r\n        ...prevDetails,\r\n        [name]: value,\r\n      }));\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n\r\n    const formData = new FormData();\r\n    for (let key in songDetails) {\r\n      formData.append(key, songDetails[key]);\r\n    }\r\n    const token = sessionStorage.getItem('token')\r\n    if (!token) {\r\n      Navigate('/login')\r\n      return;\r\n    }\r\n    try {\r\n      await axios.put(`${apiUrl}/songs/${id}/`, formData, {\r\n        headers: {\r\n          \"Content-Type\": \"multipart/form-data\",\r\n          Authorization: `Token ${token}`,\r\n        },\r\n      });\r\n      navigate(`/songs/${id}`);\r\n    } catch (error) {\r\n      setError(error.response?.data?.detail);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // const deleteSong = async () => {\r\n  //   const token = sessionStorage.getItem('token')\r\n  //   if (!token) {\r\n  //     Navigate('/login')\r\n  //     return;\r\n  //   }\r\n  //   try {\r\n  //     await api.delete(`/songs/${id}/`, {\r\n  //       headers: {\r\n  //         Authorization: `Token ${token}`\r\n  //       },\r\n  //     });\r\n  //     navigate(`/`);\r\n  //   } catch (error) {\r\n  //     setError(error.response?.data?.detail || \"An error occurred\");\r\n  //   }\r\n  // }\r\n\r\n  const openCommentModal = () => {\r\n    setIsModalOpen(true);\r\n  };\r\n\r\n  const closeCommentModal = () => {\r\n    setIsModalOpen(false);\r\n  };\r\n\r\n  const handlePlaySong = (id) => {\r\n    navigate(`/song/${id}/play`);\r\n  };\r\n\r\n  if (error) return <p className=\"text-red-500\">{error}</p>;\r\n  if (loading) return <Loading />;\r\n\r\n\r\n  return (\r\n    <div className=\"flex items-center justify-center bg-gradient-to-r from-purple-500 to-indigo-600 flex-col w-full\">\r\n      <div className=\"w-full sm:w-2/3 md:w-1/2 lg:w-1/3 xl:w-1/4 bg-gray-800 p-6 rounded-lg shadow-xl m-2\">\r\n        <div className=\"flex items-center justify-between\">\r\n          <div className=\"flex items-center space-x-2\">\r\n            <button\r\n              onClick={() => navigate(-1)}\r\n              className=\"text-white text-sm font-semibold flex items-center space-x-2 px-4 py-2 rounded-lg bg-orange-400 hover:bg-orange-500 transition duration-200\"\r\n            >\r\n              <FaArrowLeft className=\"text-xl\" />\r\n              <span>Back</span>\r\n            </button>\r\n          </div>\r\n        </div>\r\n        {song ? (\r\n          <div className=\"flex flex-col items-center mt-2 space-y-2\">\r\n            <div className=\"w-full h-auto max-w-xs\">\r\n                {song?.song_cover_url ? (\r\n                  <img\r\n                    className=\"w-full object-cover rounded-lg shadow-md\"\r\n                    src={song.song_cover_url.startsWith(\"http\") ? song.song_cover_url : `${song.song_cover_url}`}\r\n                    alt=\"Song cover\"\r\n                  />\r\n                ) : song?.song_cover ? (\r\n                  <img\r\n                    className=\"w-full object-cover rounded-lg shadow-md\"\r\n                    src={song.song_cover.startsWith(\"http\") ? song.song_cover : `${song.song_cover}`}\r\n                    alt=\"Song cover\"\r\n                  />\r\n                ) : null}\r\n              </div>\r\n            <div className=\"w-full text-white\">\r\n              <h2 className=\"text-2xl font-semibold\">{song.title}</h2>\r\n              <p className=\"mt-2 text-lg\">Artist: {song.artist?.name}</p>\r\n              <p className=\"text-lg\">Genre: {song.genre}</p>\r\n              <p className=\"text-lg\">Duration: {song.duration}</p>\r\n            </div>\r\n\r\n            <div className=\"flex justify-center items-center space-x-6 mt-4\">\r\n              <button\r\n                onClick={openCommentModal}\r\n                className=\"text-white text-xl py-2 px-4 rounded-lg hover:bg-sky-500 transition duration-200\"\r\n                aria-label=\"Edit Comments\"\r\n              >\r\n                <FaRegEdit />\r\n              </button>\r\n\r\n              <button\r\n                // onClick={deleteSong}\r\n                className=\"text-white text-xl py-2 px-4 rounded-lg hover:bg-red-600 transition duration-200\"\r\n                aria-label=\"Delete Song\"\r\n              >\r\n                <FaTrash />\r\n              </button>\r\n\r\n              <button\r\n                onClick={() => handlePlaySong(song.id)}\r\n                className=\"text-white text-xl py-2 px-4 rounded-lg hover:bg-orange-400 transition duration-200\"\r\n                aria-label=\"Play Song\"\r\n              >\r\n                <FaPlay />\r\n              </button>\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          <div className=\"text-center text-white text-xl\">No song found!</div>\r\n        )}\r\n      </div>\r\n      {isModalOpen && (\r\n        <div className=\"fixed top-0 left-0 w-full h-full bg-black bg-opacity-50 flex items-center justify-center z-50\">\r\n          <div className=\"bg-white p-6 rounded-md shadow-lg w-1/3 columns-2\">\r\n            <h2 className=\"text-xl mb-4\">Update Song</h2>\r\n            <form onSubmit={handleSubmit}>\r\n              <div className=\"mb-2\">\r\n                <label className=\"block text-gray-700\">Song Name</label>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"title\"\r\n                  value={songDetails.title}\r\n                  onChange={handleInputChange}\r\n                  className=\"w-full p-1 border rounded-md\"\r\n                />\r\n              </div>\r\n              <div className=\"mb-2\">\r\n                <label className=\"block text-gray-700\">Song Cover</label>\r\n                <input\r\n                  type=\"file\"\r\n                  name=\"song_cover\"\r\n                  accept=\"image/*\"\r\n                  onChange={handleInputChange}\r\n                  className=\"w-full p-2 border rounded-md\"\r\n                />\r\n                {songDetails.song_cover && !songDetails.song_cover.name && (\r\n                  <p className=\"text-gray-600 mt-2\">\r\n                    {song.song_cover.split(\"/\").pop()}\r\n                  </p>\r\n                )}\r\n              </div>\r\n              <div className=\"mb-2\">\r\n                <label className=\"block text-gray-700\">Artist</label>\r\n                <select\r\n                  name=\"artist_id\"\r\n                  value={songDetails.artist}\r\n                  onChange={handleInputChange}\r\n                  className=\"w-full p-1 border rounded-md\"\r\n                  required\r\n                >\r\n                  <option value=\"\">Select Artist</option>\r\n                  {artists.map((artist) => (\r\n                    <option key={artist.id} value={artist.id}>\r\n                      {artist.name}\r\n                    </option>\r\n                  ))}\r\n                </select>\r\n              </div>\r\n              <div className=\"mb-2\">\r\n                <label className=\"block text-gray-700\">Audio File</label>\r\n                <input\r\n                  type=\"file\"\r\n                  name=\"audio\"\r\n                  accept=\"audio/*\"\r\n                  onChange={handleInputChange}\r\n                  className=\"w-full p-1 border rounded-md\"\r\n                />\r\n                {songDetails.audio && !songDetails.audio && (\r\n                  <p className=\"text-gray-600 mt-2\">\r\n                    {song.audio.split(\"/\").pop()}{\" \"}\r\n                  </p>\r\n                )}\r\n              </div>\r\n\r\n              <div className=\"mb-2\">\r\n                <label className=\"block text-gray-700\">Duration</label>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"duration\"\r\n                  value={songDetails.duration}\r\n                  onChange={handleInputChange}\r\n                  className=\"w-full p-1 border rounded-md\"\r\n                />\r\n              </div>\r\n              <div className=\"mb-2\">\r\n                <label className=\"block text-gray-700\">Genre</label>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"genre\"\r\n                  value={songDetails.genre}\r\n                  onChange={handleInputChange}\r\n                  className=\"w-full p-1 border rounded-md\"\r\n                />\r\n              </div>\r\n              <button\r\n                type=\"submit\"\r\n                className=\"w-full p-2 bg-blue-500 text-white rounded-md\"\r\n              >\r\n                Submit\r\n              </button>\r\n            </form>\r\n            <button\r\n              onClick={closeCommentModal}\r\n              className=\"absolute top-4 right-4 text-white text-2xl\"\r\n            >\r\n              &times;\r\n            </button>\r\n          </div>\r\n        </div>\r\n      )\r\n      }\r\n    </div>\r\n  );\r\n};\r\n"],"names":["SongUpdate","_song$artist","id","useParams","navigate","useNavigate","songDetails","setSongDetails","useState","title","song_cover","artist_id","audio","duration","genre","artists","setArtists","loading","setLoading","song","setSong","error","setError","isModalOpen","setIsModalOpen","useEffect","async","token","sessionStorage","getItem","response","axios","get","apiUrl","headers","Authorization","concat","data","Navigate","fetchArtists","message","fetchSongDetails","handleInputChange","e","name","value","type","files","target","prevDetails","_objectSpread","_jsx","className","children","Loading","_jsxs","onClick","FaArrowLeft","song_cover_url","src","startsWith","alt","artist","openCommentModal","FaRegEdit","FaTrash","handlePlaySong","FaPlay","onSubmit","preventDefault","formData","FormData","key","append","put","_error$response","_error$response$data","detail","onChange","accept","split","pop","required","map","closeCommentModal"],"sourceRoot":""}