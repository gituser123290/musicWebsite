{"version":3,"file":"static/js/780.ff3b7bc7.chunk.js","mappings":"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","sources":["components/Album/AlbumUpdateDelete.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport { FaRegEdit, FaTrash } from \"react-icons/fa\";\r\nimport { apiUrl } from '../../services/api';\r\nimport Loading from '../../layouts/Loading';\r\nimport axios from 'axios';\r\n\r\nexport default function AlbumUpdateDelete() {\r\n    const { id } = useParams();\r\n    const [album, setAlbum] = useState([]);\r\n    const [artists, setArtists] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState(null);\r\n    const [isModalOpen, setIsModalOpen] = useState(false);\r\n\r\n    const navigate = useNavigate();\r\n\r\n    const [songDetails, setSongDetails] = useState({\r\n        name: '',\r\n        artist_id: '',\r\n        cover_image: null,\r\n        release_date: '',\r\n    });\r\n\r\n    useEffect(() => {\r\n        const fetchAlbumDetail = async () => {\r\n            const token = sessionStorage.getItem('token');\r\n            if (!token) {\r\n                navigate('/login');\r\n                return;\r\n            }\r\n            try {\r\n                if (!id) {\r\n                    setError('Album ID is missing!');\r\n                    setLoading(false);\r\n                    return;\r\n                }\r\n\r\n                const artistsResponse = await axios.get(apiUrl+'/artists/', {\r\n                    headers: {\r\n                      Authorization: `Token ${token}`,\r\n                    },\r\n                  });\r\n                  setArtists(artistsResponse.data);\r\n\r\n                const response = await axios.get(`${apiUrl}/albums/${id}/`, {\r\n                    headers: {\r\n                        Authorization: `Token ${token}`,\r\n                    },\r\n                });\r\n                if (response.data) {\r\n                    setAlbum(response.data);\r\n                    setSongDetails({\r\n                        name: response.data.name || '',\r\n                        artist_id: response.data.artist ? response.data.artist_id : '',\r\n                        release_date: response.data.release_date || '',\r\n                        cover_image: response.data.song_cover || '',\r\n                    });\r\n                    setLoading(false);\r\n                } else {\r\n                    setError('Album data not found!');\r\n                    setLoading(false);\r\n                }\r\n            } catch (error) {\r\n                console.error(\"error\", error);\r\n                setError(error.message);\r\n                setLoading(false);\r\n            }\r\n        };\r\n\r\n        fetchAlbumDetail();\r\n    }, [id, navigate]);\r\n\r\n    const handleInputChange = (e) => {\r\n        const { name, value, type, files } = e.target;\r\n        if (type === \"file\") {\r\n            setSongDetails((prevDetails) => ({\r\n                ...prevDetails,\r\n                cover_image: files[0],\r\n            }));\r\n        } else {\r\n            setSongDetails((prevDetails) => ({\r\n                ...prevDetails,\r\n                [name]: value,\r\n            }));\r\n        }\r\n    };\r\n\r\n    const handleUpdateSong = async (e) => {\r\n        e.preventDefault();\r\n        const token = sessionStorage.getItem('token');\r\n        if (!token) {\r\n            navigate('/login');\r\n            return;\r\n        }\r\n\r\n        const formData = new FormData();\r\n        for (let key in setSongDetails) {\r\n            formData.append(key, setSongDetails[key]);\r\n        }\r\n        try {\r\n            const response = await axios.put(`${apiUrl}/albums/${id}/`, formData, {\r\n                headers: {\r\n                    'Content-Type': 'multipart/form-data',\r\n                    Authorization: `Token ${token}`,\r\n                },\r\n            });\r\n            setAlbum(response.data);\r\n            closeCommentModal();\r\n        } catch (error) {\r\n            alert(`Failed to update song.${error.message}`);\r\n        }\r\n    };\r\n\r\n    const deleteSong = async () => {\r\n        const token = sessionStorage.getItem('token');\r\n        if (!token) {\r\n            navigate('/login');\r\n            return;\r\n        }\r\n        try {\r\n            await axios.delete(`${apiUrl}/albums/delete/${id}/`, {\r\n                headers: {\r\n                    Authorization: `Token ${token}`,\r\n                },\r\n            });\r\n            setAlbum(null);\r\n        } catch (error) {\r\n            alert(`Unauthorised ${error.message}`)\r\n            navigate(`/albums/${id}/`)\r\n        }\r\n    };\r\n\r\n    const openCommentModal = () => {\r\n        setIsModalOpen(true);\r\n    };\r\n\r\n    const closeCommentModal = () => {\r\n        setIsModalOpen(false);\r\n    };\r\n\r\n    if (loading) return <div><Loading /></div>;\r\n    if (error) return <p>Error: {error}</p>;\r\n\r\n    return (\r\n        <>\r\n            <div className=\"flex items-center justify-center w-full flex-col bg-gray-200 pt-4 pb-16\">\r\n                <div className=\"p-2 bg-orange-500 rounded-md m-2 hover:bg-orange-600 shadow-xl transition-colors duration-200 cursor-pointer\">\r\n                    <button onClick={() => navigate(-1)} className=\"back-btn\">Back to Posts</button>\r\n                </div>\r\n                <div className=\"w-3/4 sm:w-2/3 md:w-1/2 lg:w-1/3 xl:w-1/4 bg-gray-800 p-2 rounded-md shadow-lg\">\r\n                    <h1 className=\"text-center text-cyan-600 text-2xl mb-2\">Song Detail</h1>\r\n                    {album ? (\r\n                        <div className=\"flex flex-col items-center space-y-4\">\r\n                            <div className=\"mb-2\">\r\n                                <img\r\n                                    className=\"w-full h-auto object-cover rounded-md\"\r\n                                    src={album.cover_image}\r\n                                    alt=\"Song cover\"\r\n                                />\r\n                            </div>\r\n                            <hr />\r\n                            <div className=\"p-2 columns-2 gap-20\">\r\n                                <h2 className=\"text-white text-2xl\">{album.name}</h2>\r\n                                <p className=\"text-white\">Artist: {album.artist?.name}</p>\r\n                                <p className=\"text-white\">song Name: {album.songs.length}</p>\r\n                                <div className=\"flex justify-end\">\r\n                                    <button\r\n                                        onClick={openCommentModal}\r\n                                        className=\"mt-2 text-3xl text-white px-4 py-2 rounded-md hover:text-sky-400\"\r\n                                    >\r\n                                        <FaRegEdit />\r\n                                    </button>\r\n                                    <button\r\n                                        onClick={deleteSong}\r\n                                        className=\"mt-2 text-3xl text-white px-4 py-2 rounded-md hover:text-red-600\"\r\n                                    >\r\n                                        <FaTrash />\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    ) : (\r\n                        <p>No Album found!</p>\r\n                    )}\r\n                </div>\r\n                {isModalOpen && (\r\n                    <div className=\"fixed top-0 left-0 w-full h-full bg-black bg-opacity-50 flex items-center justify-center z-50\">\r\n                        <div className=\"bg-white p-6 rounded-md shadow-lg w-1/3 columns-2\">\r\n                            <h2 className=\"text-xl mb-4\">Update Album</h2>\r\n                            <form onSubmit={handleUpdateSong}>\r\n                                <div className=\"mb-2\">\r\n                                    <label className=\"block text-gray-700\">Name</label>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        name=\"name\"\r\n                                        value={songDetails.name}\r\n                                        onChange={handleInputChange}\r\n                                        className=\"w-full p-1 border rounded-md\"\r\n                                    />\r\n                                </div>\r\n                                <div className=\"mb-2\">\r\n                                    <label className=\"block text-gray-700\">Artist</label>\r\n                                    <select\r\n                                    name=\"artist_id\"\r\n                                    value={songDetails.artist_id}\r\n                                    onChange={handleInputChange}\r\n                                    className=\"w-full p-1 border rounded-md\"\r\n                                    required\r\n                                    >\r\n                                    <option value=\"\">Select Artist</option>\r\n                                    {artists.map((artist) => (\r\n                                        <option key={artist.id} value={artist.id}>\r\n                                        {artist.name}\r\n                                        </option>\r\n                                    ))}\r\n                                    </select>\r\n                                </div>\r\n                                <div className=\"mb-2\">\r\n                                    <label className=\"block text-gray-700\">Song Cover</label>\r\n                                    <input\r\n                                        type=\"file\"\r\n                                        name=\"cover_image\"\r\n                                        accept=\"image/*\"\r\n                                        onChange={handleInputChange}\r\n                                        className=\"w-full p-2 border rounded-md\"\r\n                                    />\r\n                                </div>\r\n                                <div className=\"mb-2\">\r\n                                    <label className=\"block text-gray-700\">Release Date</label>\r\n                                    <input\r\n                                        type=\"date\"\r\n                                        name=\"release_date\"\r\n                                        value={songDetails.release_date}\r\n                                        onChange={handleInputChange}\r\n                                        className=\"w-full p-1 border rounded-md\"\r\n                                    />\r\n                                </div>\r\n                                <div className=\"mb-2\">\r\n                                    <button\r\n                                        type=\"submit\"\r\n                                        className=\"w-full p-2 bg-blue-500 text-white rounded-md\"\r\n                                    >\r\n                                        Submit\r\n                                    </button>\r\n                                </div>\r\n                            </form>\r\n                            <button\r\n                                onClick={closeCommentModal}\r\n                                className=\"absolute top-4 right-4 text-white text-2xl\"\r\n                            >\r\n                                &times;\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n"],"names":["AlbumUpdateDelete","_album$artist","id","useParams","album","setAlbum","useState","artists","setArtists","loading","setLoading","error","setError","isModalOpen","setIsModalOpen","navigate","useNavigate","songDetails","setSongDetails","name","artist_id","cover_image","release_date","useEffect","async","token","sessionStorage","getItem","artistsResponse","axios","get","apiUrl","headers","Authorization","concat","data","response","artist","song_cover","console","message","fetchAlbumDetail","handleInputChange","e","value","type","files","target","prevDetails","_objectSpread","closeCommentModal","_jsx","children","Loading","_jsxs","_Fragment","className","onClick","src","alt","songs","length","openCommentModal","FaRegEdit","delete","alert","FaTrash","onSubmit","preventDefault","formData","FormData","key","append","put","onChange","required","map","accept"],"sourceRoot":""}