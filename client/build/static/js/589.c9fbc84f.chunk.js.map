{"version":3,"file":"static/js/589.c9fbc84f.chunk.js","mappings":"qLAKe,SAASA,IACpB,MAAOC,EAAOC,IAAYC,EAAAA,EAAAA,UAAS,OAC5BC,EAASC,IAAcF,EAAAA,EAAAA,UAAS,KAChCG,EAAUC,IAAeJ,EAAAA,EAAAA,UAAS,CACrCK,KAAM,GACNC,UAAW,GACXC,aAAc,GACdC,YAAa,OAGXC,GAAWC,EAAAA,EAAAA,OAGjBC,EAAAA,EAAAA,YAAU,KACeC,WACjB,MAAMC,EAAQC,eAAeC,QAAQ,SACrC,GAAKF,EAIL,IACI,MAAMG,QAAiBC,EAAAA,EAAMC,IAAIC,EAAAA,EAAO,WAAY,CAChDC,QAAS,CACLC,cAAc,SAADC,OAAWT,MAGhCX,EAAWc,EAASO,KACxB,CAAE,MAAOzB,GAAQ,IAAD0B,EAAAC,EACZ1B,GAAuB,QAAdyB,EAAA1B,EAAMkB,gBAAQ,IAAAQ,GAAM,QAANC,EAAdD,EAAgBD,YAAI,IAAAE,OAAN,EAAdA,EAAsBC,UAAW,yBAC9C,MAZIC,EAAAA,EAAAA,IAAS,SAYb,EAGJC,EAAc,GACf,CAACnB,IAEJ,MAAMoB,EAAqBC,IACvB,MAAM,KAAEzB,EAAI,MAAE0B,EAAK,KAAEC,EAAI,MAAEC,GAAUH,EAAEI,OAEnC9B,EADS,SAAT4B,EACaG,IAAWC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACjBD,GAAW,IACd,CAAC9B,GAAO4B,EAAM,KAGLE,IAAWC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACjBD,GAAW,IACd,CAAC9B,GAAO0B,IAEhB,EAsBJ,OAAIjC,GACOuC,EAAAA,EAAAA,MAAA,KAAAC,SAAA,CAAG,UAAQxC,MAIlByC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,wEAAuEF,UAClFD,EAAAA,EAAAA,MAAA,OAAKG,UAAU,0DAAyDF,SAAA,EACpEC,EAAAA,EAAAA,KAAA,MAAIC,UAAU,oDAAmDF,SAAC,uBAClED,EAAAA,EAAAA,MAAA,QAAMI,SA3BG7B,UACjBkB,EAAEY,iBACF,MAAMC,EAAW,IAAIC,SACrB,IAAK,IAAIC,KAAO1C,EAChBwC,EAASG,OAAOD,EAAK1C,EAAS0C,IAE9B,IACI,MAAM7B,QAAiBC,EAAAA,EAAM8B,KAAK5B,EAAAA,EAAO,kBAAmBwB,EAAU,CAClEvB,QAAS,CACL,eAAgB,yBAGxBhB,EAAYY,EAASO,MACrBd,EAAS,SACb,CAAE,MAAOX,GAAQ,IAADkD,EAAAC,EACZlD,GAAuB,QAAdiD,EAAAlD,EAAMkB,gBAAQ,IAAAgC,GAAM,QAANC,EAAdD,EAAgBzB,YAAI,IAAA0B,OAAN,EAAdA,EAAsBvB,UAAW5B,EAAM4B,SAAW,yBAC/D,GAWqCY,SAAA,EACzBD,EAAAA,EAAAA,MAAA,OAAKG,UAAU,YAAWF,SAAA,EACtBD,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACIC,EAAAA,EAAAA,KAAA,SAAOW,QAAQ,OAAOV,UAAU,mCAAkCF,SAAC,gBACnEC,EAAAA,EAAAA,KAAA,SACIP,KAAK,OACL3B,KAAK,OACL8C,GAAG,OACHC,SAAUvB,EACVwB,YAAY,mBACZb,UAAU,0FACVc,UAAQ,QAGhBjB,EAAAA,EAAAA,MAAA,OAAKG,UAAU,OAAMF,SAAA,EACjBC,EAAAA,EAAAA,KAAA,SAAOC,UAAU,sBAAqBF,SAAC,YACvCD,EAAAA,EAAAA,MAAA,UACIhC,KAAK,YACL0B,MAAO5B,EAASG,UAChB8C,SAAUvB,EACVW,UAAU,+BACVc,UAAQ,EAAAhB,SAAA,EAERC,EAAAA,EAAAA,KAAA,UAAQR,MAAM,GAAEO,SAAC,kBAChBrC,EAAQsD,KAAKC,IACVjB,EAAAA,EAAAA,KAAA,UAAwBR,MAAOyB,EAAOL,GAAGb,SAAEkB,EAAOnD,MAArCmD,EAAOL,aAIhCd,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACIC,EAAAA,EAAAA,KAAA,SAAOW,QAAQ,eAAeV,UAAU,mCAAkCF,SAAC,kBAC3EC,EAAAA,EAAAA,KAAA,SACIP,KAAK,OACL3B,KAAK,eACL8C,GAAG,eACHC,SAAUvB,EACVW,UAAU,0FACVc,UAAQ,QAGhBjB,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACIC,EAAAA,EAAAA,KAAA,SAAOW,QAAQ,cAAcV,UAAU,mCAAkCF,SAAC,WAC1EC,EAAAA,EAAAA,KAAA,SACIP,KAAK,OACL3B,KAAK,cACL8C,GAAG,cACHM,OAAO,UACPL,SAAUvB,EACVW,UAAU,mGAItBD,EAAAA,EAAAA,KAAA,OAAKC,UAAU,2BAA0BF,UACrCC,EAAAA,EAAAA,KAAA,UACIP,KAAK,SACLQ,UAAU,qIAAoIF,SACjJ,oBAQzB,C","sources":["pages/AlbumPage.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Navigate, useNavigate } from \"react-router-dom\";\r\nimport {apiUrl} from '../services/api';\r\nimport axios from 'axios'\r\n\r\nexport default function ArtistPage() {\r\n    const [error, setError] = useState(null);\r\n    const [artists, setArtists] = useState([]);\r\n    const [songData, setSongData] = useState({\r\n        name: \"\",\r\n        artist_id: \"\",\r\n        release_date: \"\",\r\n        cover_image: null,\r\n    });\r\n\r\n    const navigate = useNavigate();\r\n\r\n\r\n    useEffect(() => {\r\n        const fetchArtists = async () => {\r\n            const token = sessionStorage.getItem('token');\r\n            if (!token) {\r\n                Navigate('/login'); \r\n                return;\r\n            }\r\n            try {\r\n                const response = await axios.get(apiUrl+'artists/', {\r\n                    headers: {\r\n                        Authorization: `Token ${token}`, \r\n                    },\r\n                });\r\n                setArtists(response.data);\r\n            } catch (error) {\r\n                setError(error.response?.data?.message || \"Failed to load artists\");\r\n            }\r\n        };\r\n\r\n        fetchArtists();\r\n    }, [navigate]);\r\n\r\n    const handleInputChange = (e) => {\r\n        const { name, value, type, files } = e.target;\r\n        if (type === \"file\") {\r\n            setSongData((prevDetails) => ({\r\n                ...prevDetails,\r\n                [name]: files[0],\r\n            }));\r\n        } else {\r\n            setSongData((prevDetails) => ({\r\n                ...prevDetails,\r\n                [name]: value,\r\n            }));\r\n        }\r\n    };\r\n\r\n    const handleArtist = async (e) => {\r\n        e.preventDefault();\r\n        const formData = new FormData();\r\n        for (let key in songData) {\r\n        formData.append(key, songData[key]);\r\n        }\r\n        try {\r\n            const response = await axios.post(apiUrl+'/albums/create/', formData, {\r\n                headers: {\r\n                    \"Content-Type\": \"multipart/form-data\",\r\n                },\r\n            });\r\n            setSongData(response.data);\r\n            navigate('/album');\r\n        } catch (error) {\r\n            setError(error.response?.data?.message || error.message || \"Failed to create album\")\r\n        }\r\n    };\r\n\r\n    if (error) {\r\n        return <p>Error: {error}</p>;\r\n    }\r\n\r\n    return (\r\n        <div className=\"flex w-full min-h-screen justify-center items-center p-4 bg-slate-100\">\r\n            <div className=\"bg-white p-6 rounded-lg shadow-lg w-full max-w-lg mb-20\">\r\n                <h2 className=\"text-2xl font-bold text-center text-gray-800 mb-6\">Album Information</h2>\r\n                <form onSubmit={handleArtist}>\r\n                    <div className=\"space-y-4\">\r\n                        <div>\r\n                            <label htmlFor=\"name\" className=\"block text-lg text-gray-700 mb-2\">Album Name</label>\r\n                            <input\r\n                                type=\"text\"\r\n                                name=\"name\" \r\n                                id=\"name\"\r\n                                onChange={handleInputChange}\r\n                                placeholder=\"Enter Album name\"\r\n                                className=\"w-full p-3 border border-gray-300 rounded-md shadow-sm focus:ring-2 focus:ring-blue-500\"\r\n                                required\r\n                            />\r\n                        </div>\r\n                        <div className=\"mb-2\">\r\n                            <label className=\"block text-gray-700\">Artist</label>\r\n                            <select\r\n                                name=\"artist_id\"\r\n                                value={songData.artist_id}\r\n                                onChange={handleInputChange}\r\n                                className=\"w-full p-3 border rounded-md\"\r\n                                required\r\n                            >\r\n                                <option value=\"\">Select Artist</option>\r\n                                {artists.map((artist) => (\r\n                                    <option key={artist.id} value={artist.id}>{artist.name}</option>\r\n                                ))}\r\n                            </select>\r\n                        </div>\r\n                        <div>\r\n                            <label htmlFor=\"release_date\" className=\"block text-lg text-gray-700 mb-2\">Release Date</label>\r\n                            <input\r\n                                type=\"date\"\r\n                                name=\"release_date\"\r\n                                id=\"release_date\"\r\n                                onChange={handleInputChange}\r\n                                className=\"w-full p-3 border border-gray-300 rounded-md shadow-sm focus:ring-2 focus:ring-blue-500\"\r\n                                required\r\n                            />\r\n                        </div>\r\n                        <div>\r\n                            <label htmlFor=\"cover_image\" className=\"block text-lg text-gray-700 mb-2\">Image</label>\r\n                            <input\r\n                                type=\"file\"\r\n                                name=\"cover_image\"\r\n                                id=\"cover_image\"\r\n                                accept=\"image/*\"\r\n                                onChange={handleInputChange}\r\n                                className=\"w-full p-3 border border-gray-300 rounded-md shadow-sm focus:ring-2 focus:ring-blue-500\"\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"mt-6 flex justify-center\">\r\n                        <button\r\n                            type=\"submit\"\r\n                            className=\"px-8 py-3 bg-green-600 text-white font-semibold rounded-md hover:bg-green-700 focus:ring-4 focus:ring-green-500 focus:outline-none\"\r\n                        >\r\n                            Submit\r\n                        </button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n"],"names":["ArtistPage","error","setError","useState","artists","setArtists","songData","setSongData","name","artist_id","release_date","cover_image","navigate","useNavigate","useEffect","async","token","sessionStorage","getItem","response","axios","get","apiUrl","headers","Authorization","concat","data","_error$response","_error$response$data","message","Navigate","fetchArtists","handleInputChange","e","value","type","files","target","prevDetails","_objectSpread","_jsxs","children","_jsx","className","onSubmit","preventDefault","formData","FormData","key","append","post","_error$response2","_error$response2$data","htmlFor","id","onChange","placeholder","required","map","artist","accept"],"sourceRoot":""}