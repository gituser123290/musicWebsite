{"version":3,"file":"static/js/746.5b017a45.chunk.js","mappings":"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","sources":["components/Album/Album.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { VscPreview } from \"react-icons/vsc\";\r\n// import { RiCloseLargeFill } from \"react-icons/ri\";\r\nimport {apiUrl} from '../../services/api';\r\nimport Loading from '../../layouts/Loading';\r\nimport { Navigate, useNavigate } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\n\r\nexport default function Album() {\r\n    const [albums, setAlbums] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState(null);\r\n    const [isModalOpen, setIsModalOpen] = useState(false);\r\n    const [selectedArtist, setSelectedArtist] = useState(null);\r\n\r\n    const navigate=useNavigate()\r\n\r\n    useEffect(() => {\r\n        const fetchAlbumData = async () => {\r\n            const token = sessionStorage.getItem('token');\r\n            if (!token) {\r\n                Navigate('/login');\r\n                return;\r\n            }\r\n            try {\r\n                const response = await axios.get(apiUrl+'/albums',{\r\n                    headers:{\r\n                        Authorization: `Token ${token}`,\r\n                    }\r\n                }\r\n                );\r\n                setAlbums(response.data);\r\n                setLoading(false);\r\n            } catch (error) {\r\n                setError(error);\r\n                setLoading(false);\r\n            }\r\n        };\r\n        fetchAlbumData();\r\n    }, []);\r\n\r\n    const handleClick=(id)=>{\r\n        navigate(`/albums/${id}/`)\r\n    }\r\n\r\n    const openModal = (artist) => {\r\n        setSelectedArtist(artist);\r\n        setIsModalOpen(true);\r\n    };\r\n\r\n    const closeModal = () => {\r\n        setIsModalOpen(false);\r\n        setSelectedArtist(null);\r\n    };\r\n\r\n    if (loading) return <Loading/>;\r\n    if (error) return <p>Error: {error.message}</p>;\r\n\r\n    return (\r\n        <div className=\"flex justify-center items-center w-full py-8 mb-12\">\r\n            <div className=\"grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-8 p-4 w-full\">\r\n            {albums && albums.length > 0 ?(\r\n                albums.map((album) => {\r\n                        const artist = { \r\n                            name: album.artist.name,\r\n                            image: album.cover_image,\r\n                            songs: album.songs.length,\r\n                            date:album.release_date,\r\n                            social_media:album.artist.social_media.spotify\r\n                        };\r\n    \r\n                        return (\r\n                            <div onClick={()=>handleClick(album.id)} \r\n                                key={album.id}\r\n                                className=\"flex justify-center items-center flex-col bg-slate-300 rounded-lg shadow-lg transform hover:scale-105 transition-all duration-300 ease-in-out\"\r\n                            >\r\n                                <div className=\"w-full\">\r\n                                    <img\r\n                                        className=\"w-full h-48 object-cover rounded-t-lg\"\r\n                                        src={album.cover_image}\r\n                                        alt={album.name}\r\n                                    />\r\n                                </div>\r\n                                <div className=\"px-4 py-3 w-full text-center\">\r\n                                    <h2 className=\"text-xl font-bold text-gray-900\">{album.name}</h2>\r\n                                    <p className=\"text-sm text-gray-600\">Singer: {album.artist.name}</p>\r\n                                    <p className=\"text-sm text-gray-600\">Plateform: {album.artist.social_media.spotify}</p>\r\n                                    <p className=\"text-sm text-gray-600\">Release Date: {album.release_date}</p>\r\n                                    <p className='text-sm text-gray-500'>Total Songs: {album.songs.length}</p>\r\n                                    <div className=\"mt-2\">\r\n                                        <button\r\n                                            className=\"text-indigo-600 underline hover:text-indigo-800\"\r\n                                            onMouseEnter={() => openModal(artist)}\r\n                                        >\r\n                                            <VscPreview/>\r\n                                        </button>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        );\r\n                    })\r\n                ):(\r\n                    <p className='text-red-600 text-2xl'>No albums found.</p>\r\n                )}\r\n                \r\n            </div>\r\n            <Modal isOpen={isModalOpen} onClose={closeModal} artist={selectedArtist} />\r\n        </div>\r\n    );\r\n}\r\n\r\nconst Modal = ({ isOpen, onClose, artist }) => {\r\n    if (!isOpen) return null;\r\n    return (\r\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex justify-center items-center z-50  mt-4 mb-20\">\r\n            <div onMouseLeave={onClose} className=\"bg-white p-6 rounded-lg max-w-md w-full\">\r\n                <h2 className=\"text-2xl font-bold mb-4\">Artist Details</h2>\r\n                <div className=\"w-full mb-6 flex justify-center\">\r\n                    <img\r\n                    className=\"w-full max-w-xs h-32 object-cover rounded-lg shadow-md\"\r\n                    src={artist.image}\r\n                    alt=\"Song cover\"\r\n                    />\r\n                </div>\r\n                <p><strong>Name: </strong> {artist.name}</p>\r\n                <p><strong>Songs: </strong> {artist.songs}</p>\r\n                <p><strong>Social_media: </strong>{artist.social_media}</p>\r\n                <p><strong>Debut Year: </strong> {artist.date}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n};"],"names":["Album","albums","setAlbums","useState","loading","setLoading","error","setError","isModalOpen","setIsModalOpen","selectedArtist","setSelectedArtist","navigate","useNavigate","useEffect","async","token","sessionStorage","getItem","response","axios","get","apiUrl","headers","Authorization","concat","data","Navigate","fetchAlbumData","_jsx","Loading","_jsxs","children","message","className","length","map","album","artist","name","image","cover_image","songs","date","release_date","social_media","spotify","onClick","handleClick","id","src","alt","onMouseEnter","openModal","VscPreview","Modal","isOpen","onClose","closeModal","_ref","onMouseLeave"],"sourceRoot":""}