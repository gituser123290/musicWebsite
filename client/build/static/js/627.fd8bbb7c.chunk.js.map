{"version":3,"file":"static/js/627.fd8bbb7c.chunk.js","mappings":"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","sources":["pages/SongPage.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { apiUrl } from \"../services/api\";\r\nimport axios from 'axios';\r\n\r\nexport default function SongPage() {\r\n  const [error, setError] = useState(null);\r\n  const [songData, setSongData] = useState({\r\n    title: \"\",\r\n    song_cover_url: \"\",\r\n    artist_id: \"\",\r\n    audio: null,\r\n    genre: \"Pop\",\r\n  });\r\n  const [artists, setArtists] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    const fetchArtists = async () => {\r\n      const token = sessionStorage.getItem(\"token\");\r\n      if (!token) return;\r\n      try {\r\n        const response = await axios.get(apiUrl+\"/artists\", {\r\n          headers: {\r\n            Authorization: `Token ${token}`,\r\n          },\r\n        });\r\n        setArtists(response.data);\r\n      } catch (error) {\r\n        setError(\"Failed to load artists: \" + error.message);\r\n      }\r\n    };\r\n\r\n    fetchArtists();\r\n  }, []);\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value, type, files } = e.target;\r\n    if (type === \"file\") {\r\n      setSongData((prevDetails) => ({\r\n        ...prevDetails,\r\n        [name]: files[0],\r\n      }));\r\n    } else {\r\n      setSongData((prevDetails) => ({\r\n        ...prevDetails,\r\n        [name]: value,\r\n      }));\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    const token = sessionStorage.getItem(\"token\");\r\n    if (!token) return;\r\n\r\n    const formData = new FormData();\r\n    for (let key in songData) {\r\n      formData.append(key, songData[key]);\r\n    }\r\n\r\n    try {\r\n      await axios.post(apiUrl+\"/songs/create/\", formData, {\r\n        headers: {\r\n          \"Content-Type\": \"multipart/form-data\",\r\n          Authorization: `Token ${token}`,\r\n        },\r\n      });\r\n      alert('Successfully created Song:')\r\n      navigate(\"/songs\");\r\n    } catch (error) {\r\n      setError(error.response?.data?.detail || \"Something went wrong\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  if (error) return <p className=\"text-red-500\">Error: {error}</p>;\r\n\r\n  return (\r\n    <div className=\"w-full flex items-center justify-center mt-4 mb-20\">\r\n      <div className=\"bg-cyan-800 p-6 rounded-md shadow-lg w-1/3\">\r\n        <h2 className=\"text-xl mb-4\">Create Song</h2>\r\n        <form onSubmit={handleSubmit} encType=\"multipart/form-data\">\r\n          <div className=\"mb-2\">\r\n            <label className=\"block text-gray-700\">Title</label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"title\"\r\n              value={songData.title}\r\n              onChange={handleInputChange}\r\n              className=\"w-full p-1 border rounded-md\"\r\n              required\r\n            />\r\n          </div>\r\n\r\n          <div className=\"mb-2\">\r\n            <label className=\"block text-gray-700\">Genre</label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"genre\"\r\n              value={songData.genre}\r\n              onChange={handleInputChange}\r\n              className=\"w-full p-1 border rounded-md\"\r\n              required\r\n            />\r\n          </div>\r\n\r\n          <div className=\"mb-2\">\r\n            <label className=\"block text-gray-700\">Artist</label>\r\n            <select\r\n              name=\"artist_id\"\r\n              value={songData.artist_id}\r\n              onChange={handleInputChange}\r\n              className=\"w-full p-1 border rounded-md\"\r\n              required\r\n            >\r\n              <option value=\"\">Select Artist</option>\r\n              {artists.map((artist) => (\r\n                <option key={artist.id} value={artist.id}>\r\n                  {artist.name}\r\n                </option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n\r\n          <div className=\"mb-2\">\r\n            <label className=\"block text-gray-700\">Audio File</label>\r\n            <input\r\n              type=\"file\"\r\n              name=\"audio\"\r\n              accept=\"audio/*\"\r\n              onChange={handleInputChange}\r\n              className=\"w-full p-1 border rounded-md\"\r\n              required\r\n            />\r\n          </div>\r\n\r\n          <div className=\"mb-2\">\r\n            <label className=\"block text-gray-700\">Song Cover URL</label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"song_cover_url\"\r\n              value={songData.song_cover_url}\r\n              onChange={handleInputChange}\r\n              className=\"w-full p-1 border rounded-md\"\r\n              required\r\n            />\r\n          </div>\r\n\r\n          <button\r\n            type=\"submit\"\r\n            className=\"w-full p-2 bg-blue-500 text-white rounded-md\"\r\n            disabled={loading}\r\n          >\r\n            {loading ? \"Uploading...\" : \"Submit\"}\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"names":["SongPage","error","setError","useState","songData","setSongData","title","song_cover_url","artist_id","audio","genre","artists","setArtists","loading","setLoading","navigate","useNavigate","useEffect","async","token","sessionStorage","getItem","response","axios","get","apiUrl","headers","Authorization","concat","data","message","fetchArtists","handleInputChange","e","name","value","type","files","target","prevDetails","_objectSpread","_jsxs","className","children","_jsx","onSubmit","preventDefault","formData","FormData","key","append","post","alert","_error$response","_error$response$data","detail","encType","onChange","required","map","artist","id","accept","disabled"],"sourceRoot":""}